# My second job

My second real job was at a place called "Blue Fireflies".
It was a small software consulting shop, and I'd been hired in an entry level
position to help write the user interface for a big job they'd just won from the
local auto manufacturer.
I would be working alongside another new hire named Dan, and Jimmy—my boss—would
be responsible for the trickier and more sensitive parts of the app.
At the time I was already a competent programmer, but I knew next to nothing
about how large web applications fit together.

So it came as a surprise when Jimmy announced that I'd be taking over his role
in the project.
He had given me some practice work to complete during my first week and was
impressed with how quickly I finished it.
He insisted that I clearly knew more than I'd let on during the interview.
I welcomed the change: the new work promised to be more
interesting, and I was completely unware of how little I knew.

I was learning a lot, improvising quite a bit, and Dan and I were making progress.
Jimmy even found our pace _satisfactory_.
But you don't know what you don't know, and one day Jimmy approached my desk and
said "We can't do any more of this manual DB update shit. Just write a migration
each time there's a change."
I had just informed him and Dan over Slack that, once again, the schema needed
to be changed, so they'd need to wipe their local databases in order to run the
latest version of the app.
Now in the past I would've been flustered by this: Jimmy was more direct than
most people I've worked with, and I was—looking back—embarrassingly sensitive at
the time.
I might have even whimpered some pitiful excuse like "Nobody ever taught me what
a migration is".
But he was gone as quickly as he'd arrived and I, fortuitously, had held my
tongue.
I googled "database migration", read a few articles, and made the necessary
changes.
I learned something new, and that was the last of the manual DB update shit.

This developed into a regular pattern.
Jimmy would materialize at my desk and say something like "I think we need to
add a queue between X and Y. That should fix it."
I'd look off into the distance, stroke my chin, look back at him, nod slowly,
and respond, "Yeah, let's give that a shot."
He'd vanish, I'd google "what is a queue", and we were off to the races.

I learned a lot with the Fireflies.
Much more, I'm convinced, than I would have had I been relegated to working
exclusively on user interfaces.
And all because Jimmy took me for smarter than I actually was.
You can learn a lot when people don't know how little you know.
